---
- hosts: localhost
  gather_facts: false

  tasks:
  - name: create a temporary directory
    tempfile:
      state: directory
    register: tempdir

  - name: copy project to temp dir
    copy:
      src: ../0_spring_application
      dest: "{{ tempdir.path }}"

  - name: make mvnw executable
    file:
      path: "{{ tempdir.path }}/0_spring_application/mvnw"
      mode: '755'

  # The resources directory contains settings for local testing so
  # delete the directory...
  - name: delete the contents of the resources directory
    file:
      path: "{{ tempdir.path }}/0_spring_application/src/main/resources"
      state: absent

  # ...recreate the empty directory...
  - name: recreate resources directory
    file:
      path: "{{ tempdir.path }}/0_spring_application/src/main/resources"
      state: directory

  # ...and populate the directory with the application file used in OCI.
  - name: populate the application.yml file
    template:
      src: ./templates/application.yml
      dest: "{{ tempdir.path }}/0_spring_application/src/main/resources/application.yml"

  - name: package spring application
    shell: cd {{ tempdir.path }}/0_spring_application && ./mvnw -Poci clean package

- hosts: all
  gather_facts: false
  # Run serially so that we don't stop all instances of an existing service if
  # we're doing a new deployment. This is common practice if you're aiming for
  # zero downtime.
  serial: 1
  vars:
    instance_tag: "{{ project_name }}_instance"

  tasks:
  - block:
    - name: copy jar
      copy:
        src: "{{ hostvars['localhost']['tempdir']['path'] }}/0_spring_application/target/{{ project_name }}-{{ project_version }}.jar"
        dest: ~/{{ project_name }}-{{ project_version }}.jar

    - name: copy service definition
      template:
        src: templates/demo.service
        dest: /etc/systemd/system/{{ project_name }}.service
      become: True

    - name: restart service
      systemd:
        name: "{{ project_name }}.service"
        state: restarted
        enabled: True
        daemon_reload: True
      become: True
    when: instance_tag in freeform_tags

- hosts: localhost
  gather_facts: false

  tasks:
  - name: delete temporary directory
    file:
      path: "{{ tempdir.path }}"
      state: absent
