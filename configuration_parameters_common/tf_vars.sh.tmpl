# The following two values are the only that two that must be explicitly set.
export TF_VAR_tenancy_ocid=

export TF_VAR_database_admin_password=R3plac3Th!sN0W

# You can override the following values but the changes might not work if you are using a free tier account.
export TF_VAR_config_file_profile=DEFAULT

export TF_VAR_vm_ssh_key=../configuration_parameters_common/vm_ssh_key.pub

export TF_VAR_shape=VM.Standard.E2.1.Micro

export TF_VAR_image_display_name="Oracle-Linux-7.9-2021.01.12-0"

export TF_VAR_load_balancer_bandwidth_in_mbps=10

export TF_VAR_load_balancer_key=../configuration_parameters_common/load_balancer_key.pem

export TF_VAR_load_balancer_cert=../configuration_parameters_common/load_balancer_cert.pem

export TF_VAR_webservice_port=8080

export TF_VAR_webservice_healthcheck_url=/actuator/health

export TF_VAR_project_name=demo

export TF_VAR_project_version=0.1

# The AD to use. Typically 1, 2 or 3. In the free tier, you might be constrained to only one of the ADs
# E.g. in Frankfurt, only AD-3 is available.
export TF_VAR_ad_number=3

export TF_VAR_number_of_instances=2

export TF_VAR_load_balancer_port=443

export TF_VAR_database_wallet_password=$TF_VAR_database_admin_password

# Some sanity checking.
this_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")")

# Is terraform installed
if ! which terraform >/dev/null
then
    echo "You need to install Terraform."
    exit 1
fi

# Check that we have an OCI config file
if [ ! -e ~/.oci/config ]
then
    mkdir -p ~/.oci
    echo "You need to download your OCI configuration and save it at $HOME/.oci/config."
    exit 1
fi

# Check that the tenancy is defined
if [ "$TF_VAR_tenancy_ocid" == "" ]
then
    echo "You need to update the value of TF_VAR_tenancy_ocid in the $this_dir/tf_vars.sh file."
    exit 1
fi

# Check that we have an SSH key
if [ ! -e $this_dir/vm_ssh_key ]
then
    echo "Generating an SSH key..."
    ssh-keygen -f $this_dir/vm_ssh_key -N ""
fi

# Check that we have a load balancer key
if [ ! -e $this_dir/load_balancer_key.pem ]
then
    echo "Generating an SSL key and self-signed certificate for the load balancer..."
    openssl req -nodes -new -x509 -keyout $this_dir/load_balancer_key.pem -out $this_dir/load_balancer_cert.pem -subj "/C=/ST=/L=/O=/CN=example.com" -days 365
fi
